name: Build Tauri App

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: ""
          - os: macos-latest
            target: "x86_64-apple-darwin"
          - os: macos-latest
            target: "aarch64-apple-darwin"
          - os: windows-latest
            target: ""

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        working-directory: ./
        run: pnpm install

      - name: Build Tauri App
        working-directory: ./
        run: pnpm run tauri build -- --target ${{ matrix.platform.target }}
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: Debug target directory
        working-directory: ./
        run: ls -la src-tauri/target/release/ || dir

      - name: Debug target-specific directory
        if: matrix.platform.os == 'macos-latest'
        working-directory: ./
        run: ls -la src-tauri/target/${{ matrix.platform.target }}/release/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-${{ matrix.platform.os }}-${{ matrix.platform.target || 'default' }}
          path: |
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.dmg
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.app
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.AppImage
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.deb
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.rpm
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.exe
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.msi
          if-no-files-found: ignore

      - name: Extract version
        id: get_version
        shell: bash
        working-directory: ./
        run: |
          if [ -f "package.json" ]; then
            echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          else
            echo "VERSION=0.1.0" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          name: App v${{ env.VERSION }}
          draft: true
          prerelease: false
          files: |
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.dmg
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.app
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.AppImage
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.deb
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.rpm
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.exe
            src-tauri/target/${{ matrix.platform.target || 'release' }}/bundle/**/*.msi

name: Build Vite Tauri App

# Quando a Action será executada
on:
  push:
    branches:
      - main # Executa ao fazer push na branch main
  pull_request:
    branches:
      - main # Executa em pull requests para a branch main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Não para todos os jobs se um falhar
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest] # Testa em Linux, macOS e Windows
        include:
          - os: macos-latest
            target: "aarch64-apple-darwin" # Para Macs com Apple Silicon (M1/M2)
          - os: macos-latest
            target: "x86_64-apple-darwin" # Para Macs Intel
          - os: ubuntu-latest
            target: "" # Sem target específico para Linux
          - os: windows-latest
            target: "" # Sem target específico para Windows

    steps:
      # Faz checkout do código
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configura o Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18" # Ajuste conforme a versão usada no seu projeto

      # Instala o Rust
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }} # Adiciona targets específicos (ex.: macOS)

      # Instala dependências no Ubuntu
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      # Instala dependências do frontend (Vite)
      - name: Install frontend dependencies
        run: npm install # Substitua por yarn ou pnpm se preferir

      # Constrói o projeto Vite + Tauri
      - name: Build Vite and Tauri
        run: npm run tauri build -- --target ${{ matrix.target }}
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }} # Para assinar a build, se necessário
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      # (Opcional) Publica os artefatos
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-${{ matrix.os }}-${{ matrix.target || 'default' }}
          path: src-tauri/target/release/bundle/**

      - name: Get version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Publish GitHub Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v${{ env.VERSION }}
          releaseName: "App v${{ env.VERSION }}"
          releaseBody: "Nova versão do app Vite + Tauri!"
          releaseDraft: true
          prerelease: false
